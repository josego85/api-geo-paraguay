load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

user  nginx;
worker_processes  auto;
pid   /var/run/nginx.pid;
error_log   /var/log/nginx/error.log  warn;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent"';

    # Logs (volume) + stdout/stderr
    access_log /var/log/nginx/access.log main;
    access_log /dev/stdout               main;
    error_log  /var/log/nginx/error.log  warn;
    error_log  /dev/stderr               warn;

    include         /etc/nginx/mime.types;
    default_type    application/octet-stream;

    # keepalive, compresion, timeouts…
    sendfile            on;
    keepalive_timeout   65;

    # rate‐limiting
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80 default_server;
        server_name localhost;

        client_max_body_size 2m;
        server_tokens off;

        add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; object-src 'none'; base-uri 'self'; frame-ancestors 'none'" always;
        add_header X-Frame-Options         "DENY" always;
        add_header X-Content-Type-Options  "nosniff" always;
        add_header Referrer-Policy         "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy      "geolocation=(), microphone=(), camera=()" always;
        add_header Cache-Control           "public, max-age=2592000, immutable, stale-while-revalidate=86400" always;

        more_set_headers "Server: Custom-Server";

        location / {
            limit_req zone=req_limit_per_ip burst=20 nodelay;
            limit_req_status 429;

            proxy_pass              http://app:5000;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection 'upgrade';
            proxy_set_header        Host $host;
            proxy_cache_bypass      $http_upgrade;
            proxy_request_buffering off;
            proxy_buffering         off;
        }

        # Block (.git, .env, etc.)
        location ~ /\.(?!well-known) {
            deny all;
        }
    }
}
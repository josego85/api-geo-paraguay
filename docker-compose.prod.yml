services:
    app:
        stdin_open: true
        container_name: app-api-geo-paraguay
        build:
            context: .
            dockerfile: Dockerfile.prod
        ports:
            - '5000:5000'
        depends_on:
            - database
            - mongodb
            - cache
        volumes:
            - ./:/app
        environment:
            NODE_ENV: production
        networks:
            - app-network
        restart: always

    database:
        image: mysql:8.0
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        ports:
            - '3406:3306'
        expose:
            - '3306'
        volumes:
            - 'mysql-data:/var/lib/mysql'
            - '/db/init.sql:/docker-entrypoint-initdb.d/init.sql'
        networks:
            - app-network
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'database']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: always

    mongodb:
        image: mongo:7-jammy
        container_name: mongodb-api-geo-paraguay
        ports:
            - '28017:27017'
        volumes:
            - dbdata6:/data/db
        networks:
            - app-network
        restart: always

    cache:
        image: redis:7.4-alpine
        container_name: cache-api-geo-paraguay
        ports:
            - '6380:6379'
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes:
            - cache:/data
        networks:
            - app-network
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
        restart: always

volumes:
    mysql-data:
    dbdata6:
    cache:
        driver: local

networks:
    app-network:
        driver: bridge

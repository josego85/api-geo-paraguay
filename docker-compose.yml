services:
  app:
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "3000:3000"
    depends_on:
      - database
      - mongodb
      - cache
    networks:
      - app-network

  database:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}     
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - 'mysql-data:/var/lib/mysql'
      - '/db/init.sql:/docker-entrypoint-initdb.d/init.sql'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  mongodb:
    image: mongo:7-jammy
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db
    networks:
      - app-network

  cache:
    image: redis:7.4-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data
    networks:
      - app-network

volumes:
  mysql-data:
  dbdata6:
  cache:
    driver: local

networks:
  app-network:
    driver: bridge
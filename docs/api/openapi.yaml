openapi: 3.1.0
info:
  version: 2.18.7
  title: API GEO Paraguay
  description: A RESTful service that provides detailed geographical information for Paraguay based on coordinates (longitude and latitude).
  contact:
    email: josego85@gmail.com

servers:
  - url: /api/v1
    description: Development server

externalDocs:
  url: /api-docs
  description: Find more info here

tags:
  - name: Geolocation
    description: Geographical coordinate lookup endpoints
  - name: Department
    description: Department related endpoints
  - name: District
    description: District related endpoints
  - name: City
    description: City related endpoints
  - name: Neighborhood
    description: Neighborhood related endpoints

paths:
  /paraguay/{longitude}/{latitude}:
    get:
      tags:
        - Geolocation
      operationId: getGeographicalDataByCoordinates
      summary: Get all geographical data for a coordinate
      description: Retrieves detailed information including department, district, city, and neighborhood for the given longitude and latitude.
      parameters:
        - in: header
          name: accept-language
          description: Language code (e.g. en, es)
          schema:
            type: string
        - in: path
          name: longitude
          description: Longitude coordinate
          required: true
          schema:
            type: number
            minimum: -180
            maximum: 180
        - in: path
          name: latitude
          description: Latitude coordinate
          required: true
          schema:
            type: number
            minimum: -90
            maximum: 90
      responses:
        '200':
          description: Successfully retrieved geographical data
        '400':
          description: Invalid parameters supplied
        '500':
          description: Internal server error

  /departments:
    get:
      tags:
        - Department
      operationId: getAllDepartments
      summary: List all departments
      description: Retrieves a list of all departments in Paraguay.
      parameters:
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/sortOrderParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/filterDepartmentName'
      responses:
        '200':
          description: Successful retrieval of departments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Departments'
        '500':
          description: Internal server error

  /departments/{id}:
    get:
      tags:
        - Department
      operationId: getDepartmentById
      summary: Get a department by ID
      description: Retrieves details for a specific department identified by its ID.
      parameters:
        - in: path
          name: id
          description: Department ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful retrieval of department details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '404':
          description: Department not found
        '500':
          description: Internal server error

  /districts:
    get:
      tags:
        - District
      operationId: getAllDistricts
      summary: List all districts
      description: Retrieves a list of all districts in Paraguay.
      parameters:
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/sortOrderParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/filterDistrictName'
      responses:
        '200':
          description: Successful retrieval of districts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Districts'
        '500':
          description: Internal server error

  /districts/{id}:
    get:
      tags:
        - District
      operationId: getDistrictById
      summary: Get a district by ID
      description: Retrieves details for a specific district identified by its ID.
      parameters:
        - in: path
          name: id
          description: District ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful retrieval of district details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/District'
        '404':
          description: District not found
        '500':
          description: Internal server error

  /cities:
    get:
      tags:
        - City
      operationId: getAllCities
      summary: List all cities
      description: Retrieves a list of all cities in Paraguay.
      parameters:
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/sortOrderParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/filterCityName'
      responses:
        '200':
          description: Successful retrieval of cities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cities'
        '500':
          description: Internal server error

  /cities/{id}:
    get:
      tags:
        - City
      operationId: getCityById
      summary: Get a city by ID
      description: Retrieves details for a specific city identified by its ID.
      parameters:
        - in: path
          name: id
          description: City ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful retrieval of city details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        '404':
          description: City not found
        '500':
          description: Internal server error

  /neighborhoods:
    get:
      tags:
        - Neighborhood
      operationId: getAllNeighborhoods
      summary: List all neighborhoods
      description: Retrieves a list of all neighborhoods in Paraguay.
      parameters:
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/sortOrderParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/filterNeighborhoodName'
      responses:
        '200':
          description: Successful retrieval of neighborhoods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Neighborhoods'
        '500':
          description: Internal server error

  /neighborhoods/{id}:
    get:
      tags:
        - Neighborhood
      operationId: getNeighborhoodById
      summary: Get a neighborhood by ID
      description: Retrieves details for a specific neighborhood identified by its ID.
      parameters:
        - in: path
          name: id
          description: Neighborhood ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Successful retrieval of neighborhood details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Neighborhood'
        '404':
          description: Neighborhood not found
        '500':
          description: Internal server error

components:
  parameters:
    sortParam:
      in: query
      name: sortField
      required: false
      schema:
        type: string
      description: |
        Field to sort by. Example: id, name, etc.

    sortOrderParam:
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
      description: |
        Sort direction. Supported values: asc, desc.

    pageParam:
      in: query
      name: page
      required: false
      schema:
        type: integer
        minimum: 1
      description: |
        Page number for pagination. Must be a numeric value greater than or equal to 1.

    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
      description: |
        Number of items per page for pagination. Must be a numeric value greater than or equal to 1.

    filterDepartmentName:
      in: query
      name: name
      required: false
      schema:
        type: string
      description: Filter departments by name.

    filterDistrictName:
      in: query
      name: name
      required: false
      schema:
        type: string
      description: Filter districts by name.

    filterCityName:
      in: query
      name: name
      required: false
      schema:
        type: string
      description: Filter cities by name.

    filterNeighborhoodName:
      in: query
      name: name
      required: false
      schema:
        type: string
      description: Filter neighborhoods by name.

  schemas:
    Department:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the department
        name:
          type: string
          description: Name of the department
        capital_name:
          type: string
          description: Name of the capital city of the department

    Departments:
      type: array
      description: List of all departments
      items:
        $ref: '#/components/schemas/Department'

    District:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the district
        name:
          type: string
          description: Name of the district

    Districts:
      type: array
      description: List of all districts
      items:
        $ref: '#/components/schemas/District'

    City:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the city
        name:
          type: string
          description: Name of the city

    Cities:
      type: array
      description: List of all cities
      items:
        $ref: '#/components/schemas/City'

    Neighborhood:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the neighborhood
        name:
          type: string
          description: Name of the neighborhood

    Neighborhoods:
      type: array
      description: List of all neighborhoods
      items:
        $ref: '#/components/schemas/Neighborhood'
